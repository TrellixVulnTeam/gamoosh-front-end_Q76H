{"ast":null,"code":"import { PreloadAllModules, RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'home',\n  loadChildren: () => import('../app/pages/home/home.module').then(m => m.HomePageModule)\n}, {\n  path: '',\n  redirectTo: 'home',\n  pathMatch: 'full'\n}, {\n  path: 'tasks',\n  loadChildren: () => import('../app/pages/tasks/tasks.module').then(m => m.TasksPageModule)\n}, {\n  path: 'rewards',\n  loadChildren: () => import('../app/pages/rewards/rewards.module').then(m => m.RewardsPageModule)\n}, {\n  path: 'users',\n  loadChildren: () => import('../app/pages/users/users.module').then(m => m.UsersPageModule)\n}, {\n  path: 'my-tasks',\n  loadChildren: () => import('../app/pages/my-tasks/my-tasks.module').then(m => m.MyTasksPageModule)\n}, {\n  path: 'my-score',\n  loadChildren: () => import('../app/pages/my-score/my-score.module').then(m => m.MyScorePageModule)\n}, {\n  path: 'my-rewards',\n  loadChildren: () => import('../app/pages/my-rewards/my-rewards.module').then(m => m.MyRewardsPageModule)\n}, {\n  path: 'ranking',\n  loadChildren: () => import('../app/pages/ranking/ranking.module').then(m => m.RankingPageModule)\n}, {\n  path: 'about',\n  loadChildren: () => import('../app/pages/about/about.module').then(m => m.AboutPageModule)\n}, {\n  path: 'family',\n  loadChildren: () => import('../app/pages/family/family.module').then(m => m.FamilyPageModule)\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules\n    })], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}