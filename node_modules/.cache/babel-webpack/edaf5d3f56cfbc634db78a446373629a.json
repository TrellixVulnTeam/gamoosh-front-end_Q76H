{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"../../services/gamoosh.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction RewardsPage_ion_item_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\");\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2, \" N\\u00E3o h\\u00E1 tarefas\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction RewardsPage_ion_item_sliding_9_ion_label_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-label\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reward_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(reward_r2.name);\n  }\n}\n\nfunction RewardsPage_ion_item_sliding_9_ion_label_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-label\");\n    i0.ɵɵelementStart(1, \"del\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reward_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reward_r2.name);\n  }\n}\n\nfunction RewardsPage_ion_item_sliding_9_ion_icon_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 14);\n  }\n}\n\nfunction RewardsPage_ion_item_sliding_9_ion_icon_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-icon\", 15);\n  }\n}\n\nfunction RewardsPage_ion_item_sliding_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item-sliding\");\n    i0.ɵɵelementStart(1, \"ion-item\", 9);\n    i0.ɵɵlistener(\"click\", function RewardsPage_ion_item_sliding_9_Template_ion_item_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const reward_r2 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.openActions(reward_r2);\n    });\n    i0.ɵɵtemplate(2, RewardsPage_ion_item_sliding_9_ion_label_2_Template, 2, 1, \"ion-label\", 4);\n    i0.ɵɵtemplate(3, RewardsPage_ion_item_sliding_9_ion_label_3_Template, 3, 1, \"ion-label\", 4);\n    i0.ɵɵtemplate(4, RewardsPage_ion_item_sliding_9_ion_icon_4_Template, 1, 0, \"ion-icon\", 10);\n    i0.ɵɵtemplate(5, RewardsPage_ion_item_sliding_9_ion_icon_5_Template, 1, 0, \"ion-icon\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-item-options\", 12);\n    i0.ɵɵelementStart(7, \"ion-item-option\", 13);\n    i0.ɵɵlistener(\"click\", function RewardsPage_ion_item_sliding_9_Template_ion_item_option_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const reward_r2 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.delet(reward_r2);\n    });\n    i0.ɵɵtext(8, \"Excluir\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reward_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !reward_r2.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", reward_r2.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !reward_r2.done);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", reward_r2.done);\n  }\n}\n\nexport let RewardsPage = /*#__PURE__*/(() => {\n  class RewardsPage {\n    constructor(alertCtrl, toastCtrl, actionSheetCtrl, gamooshService) {\n      this.alertCtrl = alertCtrl;\n      this.toastCtrl = toastCtrl;\n      this.actionSheetCtrl = actionSheetCtrl;\n      this.gamooshService = gamooshService;\n      this.rewards = [];\n      let rewardJson = localStorage.getItem('rewardDb');\n\n      if (rewardJson != null) {\n        this.rewards = JSON.parse(rewardJson);\n      }\n    }\n\n    showAdd() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertCtrl.create({\n          header: 'Deseja adicionar uma recompensa?',\n          inputs: [{\n            name: 'newReward',\n            type: 'text',\n            placeholder: 'Descrição'\n          }, {\n            name: 'value',\n            type: 'number',\n            placeholder: 'Valor'\n          }],\n          buttons: [{\n            text: 'Cancelar',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: () => {\n              console.log('Confirm Cancel');\n            }\n          }, {\n            text: 'Adicionar',\n            handler: form => {\n              this.add(form.newReward, form.value);\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n\n    add(nome, valor) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (nome.trim().length < 1) {\n          const toast = yield this.toastCtrl.create({\n            message: 'Informe o que deseja fazer',\n            duration: 2000,\n            position: 'top'\n          });\n          toast.present();\n          return;\n        }\n\n        const reward = {\n          name: nome,\n          value: valor,\n          done: false\n        };\n        this.rewards.push(reward);\n        this.gamooshService.addReward(reward.name, reward.value).then(response => {\n          console.log(response);\n        }).catch(erro => {\n          console.error(erro);\n        });\n      });\n    }\n\n    updateLocalStorage() {\n      localStorage.setItem('rewardDb', JSON.stringify(this.rewards));\n    }\n\n    openActions(reward) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const actionSheet = yield this.actionSheetCtrl.create({\n          header: 'O que deseja fazer?',\n          buttons: [{\n            text: reward.done ? 'Desmarcar' : 'Marcar',\n            icon: reward.done ? 'radio-button-off' : 'checkmark-circle',\n            handler: () => {\n              reward.done = !reward.done;\n              this.updateLocalStorage();\n            }\n          }, {\n            text: 'Cancelar',\n            icon: 'close',\n            handler: () => {\n              console.log('Cancel clicked');\n            }\n          }]\n        });\n        yield actionSheet.present();\n      });\n    }\n\n    delet(reward) {\n      this.rewards = this.rewards.filter(rewardArray => reward != rewardArray);\n      this.updateLocalStorage();\n    }\n\n  }\n\n  RewardsPage.ɵfac = function RewardsPage_Factory(t) {\n    return new (t || RewardsPage)(i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.ActionSheetController), i0.ɵɵdirectiveInject(i2.GamooshService));\n  };\n\n  RewardsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RewardsPage,\n    selectors: [[\"app-reward\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[\"slot\", \"start\"], [\"menu\", \"main-menu\"], [3, \"fullscreen\"], [1, \"animate__wobble\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [1, \"add-button\", 3, \"click\"], [\"name\", \"add\"], [3, \"click\"], [\"slot\", \"start\", \"name\", \"radio-button-off\", 4, \"ngIf\"], [\"slot\", \"start\", \"name\", \"checkmark-circle\", \"color\", \"sucess\", 4, \"ngIf\"], [\"side\", \"start\"], [\"color\", \"dark\", 3, \"click\"], [\"slot\", \"start\", \"name\", \"radio-button-off\"], [\"slot\", \"start\", \"name\", \"checkmark-circle\", \"color\", \"sucess\"]],\n    template: function RewardsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Cadastro de Recompensas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 0);\n        i0.ɵɵelement(5, \"ion-menu-button\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-content\", 2);\n        i0.ɵɵelementStart(7, \"ion-list\", 3);\n        i0.ɵɵtemplate(8, RewardsPage_ion_item_8_Template, 3, 0, \"ion-item\", 4);\n        i0.ɵɵtemplate(9, RewardsPage_ion_item_sliding_9_Template, 9, 4, \"ion-item-sliding\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-fab\", 6);\n        i0.ɵɵelementStart(11, \"ion-fab-button\", 7);\n        i0.ɵɵlistener(\"click\", function RewardsPage_Template_ion_fab_button_click_11_listener() {\n          return ctx.showAdd();\n        });\n        i0.ɵɵelement(12, \"ion-icon\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.rewards.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.rewards);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonTitle, i1.IonButtons, i1.IonMenuButton, i1.IonContent, i1.IonList, i3.NgIf, i3.NgForOf, i1.IonFab, i1.IonFabButton, i1.IonIcon, i1.IonItem, i1.IonLabel, i1.IonItemSliding, i1.IonItemOptions, i1.IonItemOption],\n    styles: [\".add-button[_ngcontent-%COMP%]{color:#5e7ccc}\"]\n  });\n  return RewardsPage;\n})();","map":null,"metadata":{},"sourceType":"module"}